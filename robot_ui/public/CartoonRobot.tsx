/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.14 cartoonRobot.glb --types 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    robo_antina_: THREE.Mesh
    Cube002: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cylinder: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder002: THREE.Mesh
    Cylinder003: THREE.Mesh
    Cube005: THREE.Mesh
    Cube006: THREE.Mesh
    Cube007: THREE.Mesh
    Cube008: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cylinder004: THREE.Mesh
    Cylinder005: THREE.Mesh
    Cylinder006: THREE.Mesh
    Cylinder007: THREE.Mesh
    Cylinder008: THREE.Mesh
    Cube011: THREE.Mesh
    Cube012: THREE.Mesh
    Cylinder009: THREE.Mesh
    Cube013: THREE.Mesh
    Cylinder010: THREE.Mesh
    Cube014: THREE.Mesh
    Cube015: THREE.Mesh
    Cube016: THREE.Mesh
    Cylinder011: THREE.Mesh
    Sphere001: THREE.Mesh
    Sphere003: THREE.Mesh
    Sphere004: THREE.Mesh
    Sphere005: THREE.Mesh
    Sphere002: THREE.Mesh
    Sphere006: THREE.Mesh
    Sphere007: THREE.Mesh
    Sphere008: THREE.Mesh
    Cube017: THREE.Mesh
    Cube018: THREE.Mesh
    Cube019: THREE.Mesh
    Plane: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    ['robo face part 1']: THREE.MeshStandardMaterial
    ['robo antina ']: THREE.MeshStandardMaterial
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.013']: THREE.MeshStandardMaterial
    ['eye 1']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['body part 01']: THREE.MeshStandardMaterial
    ['Material.006']: THREE.MeshStandardMaterial
    DefaultMaterial: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.014']: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/cartoonRobot.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={materials['Material.001']} position={[-3.984, 86.675, 0.266]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[114.062, 54.909, 30.171]} />
      <mesh geometry={nodes.Cube001.geometry} material={materials['robo face part 1']} position={[-3.215, 122.231, 0.339]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[112.746, 34.386, 55.835]} />
      <mesh geometry={nodes.robo_antina_.geometry} material={materials['robo antina ']} position={[-8.258, 246.415, -0.144]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-21.78, 21.78, 21.78]} />
      <mesh geometry={nodes.Cube002.geometry} material={materials['Material.010']} position={[-9.481, 201.053, 0.093]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[15.758, 11.043, 25.072]} />
      <mesh geometry={nodes.Cube003.geometry} material={materials['Material.013']} position={[102.771, 122.688, 9.337]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[17.711, 41.644, 23.954]} />
      <mesh geometry={nodes.Cube004.geometry} material={materials['Material.013']} position={[-113.745, 122.688, -11.417]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[17.711, 41.644, 23.954]} />
      <mesh geometry={nodes.Cylinder.geometry} material={materials['eye 1']} position={[30.35, 141.814, 3.557]} rotation={[Math.PI, 0.096, 0]} scale={[24.514, 24.514, 49.414]} />
      <mesh geometry={nodes.Cylinder001.geometry} material={materials['eye 1']} position={[-43.184, 141.814, -3.492]} rotation={[Math.PI, 0.096, 0]} scale={[24.514, 24.514, 49.414]} />
      <mesh geometry={nodes.Cylinder002.geometry} material={materials['Material.002']} position={[23.163, 134.974, 2.868]} rotation={[Math.PI, 0.096, 0]} scale={[14.063, 14.063, 53.195]} />
      <mesh geometry={nodes.Cylinder003.geometry} material={materials['Material.002']} position={[-50.22, 134.974, -4.166]} rotation={[Math.PI, 0.096, 0]} scale={[14.063, 14.063, 53.195]} />
      <mesh geometry={nodes.Cube005.geometry} material={materials['Material.010']} position={[-1.628, 52.389, -0.67]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[33.772, 56.984, 4.673]} />
      <mesh geometry={nodes.Cube006.geometry} material={materials['Material.010']} position={[-1.628, 42.129, -0.67]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[43.234, 56.984, 6.08]} />
      <mesh geometry={nodes.Cube007.geometry} material={materials['Material.004']} position={[-4.655, -37.786, -0.96]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[82.327, 56.984, 73.745]} />
      <mesh geometry={nodes.Cube008.geometry} material={materials['body part 01']} position={[-4.655, -20.306, -0.96]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[72.462, 60.048, 45.744]} />
      <mesh geometry={nodes.Cube009.geometry} material={materials['Material.006']} position={[-4.655, -74.645, -0.96]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[35.305, 60.048, 5.819]} />
      <mesh geometry={nodes.Cube010.geometry} material={materials['Material.006']} position={[-4.655, -91.745, -0.96]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[35.305, 60.048, 5.819]} />
      <mesh geometry={nodes.Cylinder004.geometry} material={materials.DefaultMaterial} position={[51.923, -85.654, 5.624]} rotation={[Math.PI, 0.096, 0]} scale={[14.063, 14.063, 63.796]} />
      <mesh geometry={nodes.Cylinder005.geometry} material={materials.DefaultMaterial} position={[-61.156, -85.654, -5.215]} rotation={[Math.PI, 0.096, 0]} scale={[14.063, 14.063, 63.796]} />
      <mesh geometry={nodes.Cylinder006.geometry} material={materials['Material.005']} position={[-61.156, -85.654, -5.215]} rotation={[Math.PI, 0.096, 0]} scale={[9.414, 9.414, 65.998]} />
      <mesh geometry={nodes.Cylinder007.geometry} material={materials['Material.005']} position={[51.566, -85.654, 5.59]} rotation={[Math.PI, 0.096, 0]} scale={[9.414, 9.414, 65.998]} />
      <mesh geometry={nodes.Cylinder008.geometry} material={materials['Material.010']} position={[75.005, 15.873, 7.837]} rotation={[Math.PI, 0.096, -0.51]} scale={[30.28, 30.28, 32.468]} />
      <mesh geometry={nodes.Cube011.geometry} material={materials['Material.001']} position={[100.465, -21.39, 9.115]} rotation={[-1.624, -0.508, -0.109]} scale={[18.121, 32.051, 23.818]} />
      <mesh geometry={nodes.Cube012.geometry} material={materials['Material.010']} position={[118.015, -52.891, 10.798]} rotation={[-1.624, -0.508, -0.109]} scale={[13.704, 24.203, 23.818]} />
      <mesh geometry={nodes.Cylinder009.geometry} material={materials['Material.004']} position={[131.695, -78.102, 13.271]} rotation={[0, -0.096, -2.631]} scale={[-21.912, 21.912, 37.003]} />
      <mesh geometry={nodes.Cube013.geometry} material={materials['Material.001']} position={[166.355, -122.365, 16.593]} rotation={[-1.643, -0.644, -0.12]} scale={[34.143, 29.521, 41.797]} />
      <mesh geometry={nodes.Cylinder010.geometry} material={materials['Material.010']} position={[-88.745, 18.284, -7.859]} rotation={[-Math.PI, 0.096, 0.639]} scale={[30.28, 30.28, 32.468]} />
      <mesh geometry={nodes.Cube014.geometry} material={materials['Material.001']} position={[-112.103, -20.201, -11.26]} rotation={[-1.5, 0.636, -0.119]} scale={[18.121, 32.051, 23.818]} />
      <mesh geometry={nodes.Cube015.geometry} material={materials['Material.010']} position={[-133.532, -49.18, -13.314]} rotation={[-1.5, 0.636, -0.119]} scale={[13.704, 27.557, 23.818]} />
      <mesh geometry={nodes.Cube016.geometry} material={materials['Material.001']} position={[-176.912, -122.024, -16.31]} rotation={[-1.518, 0.5, -0.109]} scale={[34.143, 29.521, 41.797]} />
      <mesh geometry={nodes.Cylinder011.geometry} material={materials['Material.004']} position={[-150.223, -78.102, -13.752]} rotation={[0, -0.096, -2.631]} scale={[-21.912, 21.912, 37.003]} />
      <mesh geometry={nodes.Sphere001.geometry} material={materials['Material.010']} position={[40.686, -122.348, 4.547]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Sphere003.geometry} material={materials['Material.010']} position={[40.686, -142.412, 4.547]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Sphere004.geometry} material={materials['Material.010']} position={[40.686, -162.475, 4.547]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Sphere005.geometry} material={materials['Material.010']} position={[40.686, -182.539, 4.547]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Sphere002.geometry} material={materials['Material.010']} position={[-45.557, -122.348, -3.719]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Sphere006.geometry} material={materials['Material.010']} position={[-45.557, -142.412, -3.719]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Sphere007.geometry} material={materials['Material.010']} position={[-45.557, -162.475, -3.719]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Sphere008.geometry} material={materials['Material.010']} position={[-45.557, -182.539, -3.719]} rotation={[Math.PI / 2, 0, 0.096]} scale={[-31.376, 21.78, 13.82]} />
      <mesh geometry={nodes.Cube017.geometry} material={materials['Material.001']} position={[-65.426, -205.197, -5.624]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[59.081, 51.284, 24.863]} />
      <mesh geometry={nodes.Cube018.geometry} material={materials['Material.001']} position={[-65.421, -205.197, -5.676]} rotation={[-Math.PI / 2, 0, -0.096]} scale={[59.081, 51.284, 24.863]} />
      <mesh geometry={nodes.Cube019.geometry} material={materials['Material.001']} position={[60.535, -205.197, 6.45]} rotation={[-Math.PI / 2, 0, 3.046]} scale={[59.081, 51.284, 24.863]} />
      <mesh geometry={nodes.Plane.geometry} material={materials['Material.014']} position={[-278.239, -232.93, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[1131.629, 659.443, 1159.017]} />
    </group>
  )
}

useGLTF.preload('/cartoonRobot.glb')
